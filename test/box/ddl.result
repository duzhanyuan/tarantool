env = require('test_run')
---
...
test_run = env.new()
---
...
fiber = require'fiber'
---
...
-- simple test for parallel ddl execution
_ = box.schema.space.create('test'):create_index('pk')
---
...
ch = fiber.channel(2)
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
function f1()
    box.space.test:create_index('sec', {parts = {2, 'num'}})
    ch:put(true)
end;
---
...
function f2()
    box.space.test:create_index('third', {parts = {3, 'string'}})
    ch:put(true)
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
_ = {fiber.create(f1), fiber.create(f2)}
---
...
ch:get()
---
- true
...
ch:get()
---
- true
...
_ = box.space.test:drop()
---
...
test_run:cmd('restart server default')
env = require('test_run')
---
...
test_run = env.new()
---
...
fiber = require'fiber'
---
...
ch = fiber.channel(3)
---
...
_ = box.schema.space.create('test'):create_index('pk')
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
function add_index()
    box.space.test:create_index('sec', {parts = {2, 'num'}})
    ch:put(true)
end;
---
...
function insert_tuple(tuple)
    ch:put({pcall(box.space.test.replace, box.space.test, tuple)})
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
_ = {fiber.create(insert_tuple, {1, 2, 'a'}), fiber.create(add_index), fiber.create(insert_tuple, {2, '3', 'b'})}
---
...
{ch:get(), ch:get(), ch:get()}
---
- - - false
    - 'Tuple field 2 type does not match one required by operation: expected unsigned'
  - - true
    - [1, 2, 'a']
  - true
...
box.space.test:select()
---
- - [1, 2, 'a']
...
box.space.test:drop()
---
...
test_run:cmd('restart server default')
env = require('test_run')
---
...
test_run = env.new()
---
...
fiber = require'fiber'
---
...
errinj = box.error.injection
---
...
_ = box.schema.space.create('test'):create_index('pk')
---
...
box.space.test:replace({1, 2, 3, 4})
---
- [1, 2, 3, 4]
...
errinj.set("ERRINJ_WAL_WRITE", true)
---
- ok
...
fiber.sleep(0.01)
---
...
box.space.test.index.pk:rename('new_pk')
---
- error: Failed to write to disk
...
errinj.set("ERRINJ_WAL_WRITE", false)
---
- ok
...
box.space.test:select()
---
- - [1, 2, 3, 4]
...
sec = box.space.test:create_index('sec', {parts = {2, 'num'}})
---
...
ch = fiber.channel()
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
function drop_index()
    ch:put({pcall(sec.drop, sec)})
end;
---
...
function insert_tuple(tuple)
    ch:put({pcall(box.space.test.replace, box.space.test, tuple)})
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
errinj.set("ERRINJ_WAL_WRITE", true)
---
- ok
...
fiber.sleep(0.01)
---
...
_ = {fiber.create(insert_tuple, {1, '2', 'a'}), fiber.create(drop_index), fiber.create(insert_tuple, {2, '3', 'b'})}
---
...
{ch:get(), ch:get(), ch:get()}
---
- - - false
    - 'Tuple field 2 type does not match one required by operation: expected unsigned'
  - - false
    - Failed to write to disk
  - - false
    - Failed to write to disk
...
errinj.set("ERRINJ_WAL_WRITE", false)
---
- ok
...
box.space.test:select()
---
- - [1, 2, 3, 4]
...
box.space.test:replace({3, 'a', 'b'})
---
- error: 'Tuple field 2 type does not match one required by operation: expected unsigned'
...
box.space.test:drop()
---
...
